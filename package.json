{
  "name": "npl-dev-vscode-extension",
  "displayName": "NPL-Dev for VS Code",
  "description": "NOUMENA Protocol Language (NPL) development support for VS Code",
  "version": "1.3.0",
  "icon": "icon.png",
  "publisher": "noumenadigital",
  "license": "Apache-2.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/noumenadigital/npl-vscode-extension.git"
  },
  "engines": {
    "vscode": "^1.92.0"
  },
  "categories": [
    "Programming Languages",
    "Linters"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "noumena-panel",
          "title": "NOUMENA Cloud",
          "icon": "icon.png",
          "order": 1
        }
      ]
    },
    "views": {
      "noumena-panel": [
        {
          "id": "noumena.cloud.welcome",
          "name": "Welcome",
          "when": "!noumena.cloud.isLoggedIn",
          "type": "webview",
          "visibility": "visible"
        },
        {
          "id": "noumena.cloud.apps",
          "name": "Applications",
          "when": "noumena.cloud.isLoggedIn",
          "type": "tree",
          "visibility": "visible"
        }
      ]
    },

    "menus": {
      "view/title": [
        {
          "command": "noumena.cloud.refresh",
          "when": "view == noumena.cloud.apps",
          "group": "navigation",
          "icon": "$(refresh)"
        },
        {
          "command": "noumena.cloud.logout",
          "when": "view == noumena.cloud.apps",
          "group": "navigation@1"
        }
      ],
      "view/item/context": [
        {
          "command": "noumena.cloud.deploy",
          "when": "view == noumena.cloud.apps && viewItem =~ /application-/",
          "group": "inline",
          "title": "$(cloud-upload)"
        },
        {
          "command": "noumena.cloud.clear",
          "when": "view == noumena.cloud.apps && viewItem =~ /application-/",
          "group": "inline",
          "title": "$(clear-all)"
        }
      ]
    },
    "languages": [
      {
        "id": "npl",
        "aliases": [
          "NPL",
          "npl"
        ],
        "extensions": [
          ".npl"
        ],
        "configuration": "./language-configuration.json",
        "icon": {
          "light": "icon.png",
          "dark": "icon_dark.png"
        }
      }
    ],
    "grammars": [
      {
        "language": "npl",
        "scopeName": "source.npl",
        "path": "./syntaxes/npl.tmLanguage.json"
      }
    ],
    "configuration": {
      "title": "NPL",
      "properties": {
        "NPL.sources": {
          "type": "string",
          "default": "",
          "description": "Absolute path to the NPL sources. Leave empty to use the current workspace root.",
          "scope": "resource",
          "order": 0,
          "tags": ["NPL"]
        },
        "NPL.testSources": {
          "type": "string",
          "default": "",
          "description": "Absolute path to the NPL test sources. Leave empty to use the current workspace root.",
          "scope": "resource",
          "order": 10,
          "tags": ["NPL"]
        },
        "NPL.migrationDescriptor": {
          "type": "string",
          "description": "Absolute path to the NPL migration descriptor. Determines the sources that get deployed to your applications.",
          "scope": "resource",
          "additionalProperties": true,
          "pattern": "^$|.*yaml/migration\\.yml$",
          "patternErrorMessage": "The migration descriptor must end with yaml/migration.yml",
          "order": 15,
          "tags": ["NPL"]
        },
        "NPL.server.version": {
          "type": "string",
          "default": "latest",
          "description": "Version of the language server to use. Use 'latest' for the most recent version, or run the 'NPL: Select Language Server Version' command for a visual picker with auto-download.",
          "order": 20,
          "tags": ["NPL"]
        },
        "NPL.instructionPrompts.mode": {
          "type": "string",
          "enum": ["ask", "auto", "disabled"],
          "enumDescriptions": [
            "Ask before creating or updating instruction files",
            "Automatically create or update instruction files without prompting",
            "Never create or update instruction files"
          ],
          "default": "ask",
          "description": "Controls how NPL instruction files for AI assistants are handled",
          "order": 30,
          "tags": ["NPL"]
        },
        "noumena.cloud.portalUrl": {
          "type": "string",
          "default": "https://portal.noumena.cloud",
          "description": "NOUMENA Cloud portal URL",
          "scope": "resource",
          "format": "uri",
          "order": 100,
          "tags": ["NPL"]
        },
        "noumena.cloud.authUrl": {
          "type": "string",
          "default": "https://keycloak.noumena.cloud",
          "description": "NOUMENA Cloud authentication URL",
          "scope": "resource",
          "format": "uri",
          "order": 110,
          "tags": ["NPL"]
        }
      }
    },
    "commands": [
      {
        "command": "npl.selectServerVersion",
        "title": "Select Language Server version",
        "category": "NPL"
      },
      {
        "command": "npl.cleanServerFiles",
        "title": "Clean Language Server files and reset",
        "category": "NPL"
      },
      {
        "command": "npl.selectSources",
        "title": "Select NPL sources",
        "category": "NPL"
      },
      {
        "command": "npl.selectTestSources",
        "title": "Select NPL test sources",
        "category": "NPL"
      },
      {
        "command": "noumena.cloud.login",
        "title": "Login",
        "category": "NOUMENA Cloud"
      },
      {
        "command": "noumena.cloud.logout",
        "title": "Logout",
        "icon": "$(sign-out)",
        "category": "NOUMENA Cloud"
      },
      {
        "command": "noumena.cloud.deploy",
        "title": "Deploy NPL application",
        "category": "NOUMENA Cloud",
        "icon": "$(cloud-upload)",
        "enablement": "view == noumena.cloud.apps && viewItem == application-active"
      },
      {
        "command": "noumena.cloud.clear",
        "title": "Clear deployed NPL application",
        "category": "NOUMENA Cloud",
        "icon": "$(clear-all)",
        "enablement": "view == noumena.cloud.apps && viewItem == application-active"
      },
      {
        "command": "noumena.cloud.refresh",
        "title": "Refresh applications",
        "category": "NOUMENA Cloud",
        "icon": "$(refresh)",
        "enablement": "view == noumena.cloud.apps"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./ && npm run copy-resources",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "node ./out/test/runTest.js",
    "package": "vsce package",
    "publish:vsce": "vsce publish",
    "publish:ovsx": "ovsx publish *.vsix",
    "copy-resources": "mkdirp out/resources/templates && cpy src/resources/templates/npl-instructions.md out/resources/templates/",
    "clean": "rimraf out"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "^22.13.10",
    "@types/sinon": "^17.0.4",
    "@types/vscode": "^1.92.0",
    "@typescript-eslint/eslint-plugin": "^8.26.1",
    "@typescript-eslint/parser": "^8.26.1",
    "@vscode/test-electron": "^2.4.1",
    "@vscode/vsce": "^3.3.0",
    "cpy-cli": "^5.0.0",
    "eslint": "^9.22.0",
    "glob": "^11.0.1",
    "mkdirp": "^3.0.1",
    "minimatch": "^10.0.1",
    "mocha": "^11.1.0",
    "ovsx": "^0.10.1",
    "rimraf": "^5.0.5",
    "sinon": "^19.0.2",
    "typescript": "^5.8.2",
    "vscode-test": "^1.6.1"
  },
  "dependencies": {
    "vscode-languageclient": "^9.0.1",
    "archiver": "^7.0.1"
  }
}
